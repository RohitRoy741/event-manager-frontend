{"version":3,"sources":["Components/Timer.js","Utils/Common.js","Components/Header.js","Components/MainContent.js","Components/Filters.js","Components/Dashboard.js","Components/Login.js","Components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["calculateSecDiff","eventDate","currentDate","Math","floor","getTime","calculateMinDiff","calculateHourDiff","Timer","props","date","Date","useState","setCurrentDate","secDiff","setSecDiff","minDiff","setMinDiff","hourDiff","setHourDiff","useEffect","timeoutId","setTimeout","clearTimeout","className","getToken","sessionStorage","getItem","setUserSession","user","token","setItem","JSON","stringify","Header","userStr","parse","getUser","show","setShow","handleClose","styles","image","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","console","log","timeout","Navbar","expand","variant","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","username","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","handleLogOut","style","targetEventName","targetEventDate","targetEventCompany","Form","onSubmit","handleSubmit","Row","Col","xs","Label","htmlFor","srOnly","Control","as","value","filterKey","name","onChange","event","handleChange","target","InputGroup","FormControl","type","placeholder","inputValue","Button","isFilterApplied","handleReset","Modal","onHide","backdrop","keyboard","e","createEvent","closeButton","Title","Body","Group","controlId","handleAddEvent","company","city","Footer","MainContent","Card","width","Img","src","data","img","Text","address","handleShow","_id","deleteEvent","Filters","Check","inline","label","Dashboard","setState","isDataLoaded","axios","post","headers","then","removeItem","history","push","catch","notify","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","state","filteredData","searchValue","bannerEvent","bind","handleDateFilter","this","preventDefault","events","filter","toLowerCase","includes","prevState","getMonth","postEvent","result","length","concat","eventDates","patchEvent","patch","response","i","delete","get","newEvents","targetEvent","item","eventObj","map","index","toDateString","Loader","Spinner","top","left","justifyContent","height","animation","role","newestOnTop","rtl","pauseOnFocusLoss","toString","updateEvent","React","Component","Copyright","Typography","color","align","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Login","classes","setUsername","password","setPassword","error","setError","loading","setLoading","Container","component","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Grid","container","Box","mt","SignUp","email","setEmail","message","App","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db3a1998.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nfunction calculateSecDiff(eventDate, currentDate) {\r\n    return Math.floor(((eventDate.getTime() - currentDate.getTime())/1000)%60);\r\n}\r\nfunction calculateMinDiff(eventDate, currentDate) {\r\n    return Math.floor(((eventDate.getTime() - currentDate.getTime())/60000)%60);\r\n}\r\nfunction calculateHourDiff(eventDate, currentDate) {\r\n    return Math.floor(((eventDate - currentDate)/3600000));\r\n}\r\n\r\nfunction Timer(props) {\r\n    let date = new Date(props.eventDate);\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n    const [secDiff, setSecDiff] = useState(calculateSecDiff(date, currentDate));\r\n    const [minDiff, setMinDiff] = useState(calculateMinDiff(date, currentDate));\r\n    const [hourDiff, setHourDiff] = useState(calculateHourDiff(date, currentDate));\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n            setCurrentDate(new Date());\r\n        }, 1000);\r\n        return () => clearTimeout(timeoutId);\r\n    }, [currentDate]);\r\n    useEffect(() => {\r\n        setSecDiff(calculateSecDiff(date, currentDate));\r\n    }, [currentDate, secDiff]);\r\n    useEffect(() => {\r\n        setMinDiff(calculateMinDiff(date, currentDate));\r\n    }, [currentDate, minDiff]);\r\n    useEffect(() => {\r\n        setHourDiff(calculateHourDiff(date, currentDate));\r\n    }, [currentDate, hourDiff]);\r\n    return (\r\n        <h3 className=\"timer\">Starts In: {hourDiff} Hours, {minDiff} minutes and {secDiff} seconds</h3>\r\n    )    \r\n}\r\nexport default Timer;","export const getUser = () => {\r\n    const userStr = sessionStorage.getItem('user');\r\n    if(userStr) {\r\n        return JSON.parse(userStr);\r\n    }\r\n    return null;\r\n}\r\nexport const getToken = () => {\r\n    return sessionStorage.getItem('token') || null;\r\n}\r\nexport const setUserSession = (user, token) => {\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('user', JSON.stringify(user));\r\n}\r\nexport const removeUserSession = () => {\r\n    sessionStorage.removeItem('user');\r\n    sessionStorage.removeItem('token');\r\n}","import React, { useState } from \"react\";\r\nimport { Navbar, Nav, Form, FormControl, Button, Modal, Col, InputGroup} from \"react-bootstrap\";\r\nimport Timer from \"./Timer\";\r\nimport { getUser } from \"../Utils/Common\";\r\nfunction Header(props){\r\n    \r\n    const user = getUser();\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true) ;\r\n    let styles = {};\r\n    if(props.image) {\r\n        styles = {\r\n            backgroundImage: `linear-gradient(to bottom, rgba(0,0,0,0.3) 0%,rgba(0,0,0,0.3) 100%), url(${props.image})`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'\r\n        }\r\n    }\r\n    console.log(props.timeout)\r\n    return (\r\n        <div>\r\n            <Navbar expand=\"lg\" variant=\"dark\" bg=\"primary\" className=\"navbar\">\r\n            <Navbar.Brand href=\"#home\">Event Manager</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\" className=\"navbar-items\">\r\n                <Nav>\r\n                <Nav.Link href=\"#home\" className=\"navbar-item username\">\r\n                    {user.username}\r\n                </Nav.Link>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 user-icon web\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                </svg>\r\n                <Nav.Link href=\"#link\"  className=\"navbar-item\" onClick={()=>handleShow(true)}>Create-Event</Nav.Link>\r\n                <Nav.Link href=\"#schedule\" className=\"navbar-item\">Schedule</Nav.Link>\r\n                <Nav.Link href=\"#my-events\" className=\"navbar-item\">My Events</Nav.Link>\r\n                <Nav.Link href=\"#history\" className=\"navbar-item logout\" onClick={props.handleLogOut}>Logout</Nav.Link>\r\n                <div onClick={props.handleLogOut}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 logout-icon web\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n                    </svg>\r\n                </div>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n            <div className=\"title\" style={styles}>\r\n                <h1 className=\"event-name\">{props.targetEventName ? props.targetEventName : 'Name'}</h1>\r\n                <h3 className=\"event-date\">Hosted By: {props.targetEventDate ? props.targetEventCompany : 'Company'}</h3>\r\n                <Timer eventDate={props.timeout} />\r\n            </div>\r\n            <Form onSubmit={props.handleSubmit}>\r\n            <Form.Row className=\"align-items-center search-form\">\r\n                <Col xs=\"auto\">\r\n                <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                    Criteria\r\n                </Form.Label>\r\n                <Form.Control as=\"select\"\r\n                    className=\"web\"\r\n                    id=\"inlineFormInput\"\r\n                    value={props.filterKey}\r\n                    name=\"filterKey\"\r\n                    onChange={(event) => {props.handleChange(event.target.name, event.target.value)}}\r\n                >\r\n                    <option value=\"name\">Name</option>\r\n                    <option value=\"city\">City</option>\r\n                    <option value=\"company\">Company</option>\r\n                </Form.Control>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                    Value\r\n                </Form.Label>\r\n                <InputGroup>\r\n                    <FormControl \r\n                    type=\"text\" \r\n                    placeholder=\"Search\"\r\n                    id=\"inlineFormInputGroup\"\r\n                    name=\"searchValue\" \r\n                    value={props.inputValue} \r\n                    onChange={(event) => {props.handleChange(event.target.name, event.target.value)}}\r\n                    />\r\n                </InputGroup>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                <Button type=\"submit\" variant=\"warning\">\r\n                    Search\r\n                </Button>\r\n                </Col>\r\n                {props.isFilterApplied?\r\n                <Col xs=\"auto\">\r\n                <Button variant=\"danger\" type=\"reset\" onClick={props.handleReset}>Reset</Button>\r\n                </Col>\r\n                :null}\r\n            </Form.Row>\r\n            </Form>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Form onSubmit={(e) => {\r\n                    handleClose();\r\n                    return props.createEvent(e);\r\n                }}>\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Event Creation Form</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label>Event Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Name of event\" name=\"name\" value={props.name} onChange={props.handleAddEvent}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupPassword\">\r\n                            <Form.Label>Company Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Company\" name=\"company\" value={props.company} onChange={props.handleAddEvent}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupPassword\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"City\" name=\"city\" value={props.city} onChange={props.handleAddEvent}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupPassword\">\r\n                            <Form.Label>Date</Form.Label>\r\n                            <Form.Control type=\"datetime-local\" placeholder=\"Date\" name=\"date\" value={props.date} onChange={props.handleAddEvent}></Form.Control>\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"success\" type=\"submit\">Submit</Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header","import React, {useState} from \"react\"\r\nimport {Card, Button, Modal} from \"react-bootstrap\"\r\n\r\nfunction MainContent(props) {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    return(\r\n        <div>\r\n            <div className=\"card-block\">\r\n                <Card style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src={props.data.img} />\r\n                <Card.Body>\r\n                    <Card.Title>{props.data.name}</Card.Title>\r\n                    <Card.Text>\r\n                        <strong>Date: {props.date}</strong>\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        Company: {props.data.company.name}\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        Place: {props.data.address.city}\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" onClick={() => handleShow(true)} className=\"mr-2\">RSVP</Button>\r\n                    <Button variant=\"secondary\" onClick={() => props.handleShow(props.data.id, props.data._id, props.data, props.date)} className=\"mr-2\">Update</Button>\r\n                    <Button variant=\"danger\" onClick={() => props.deleteEvent(props.data._id, props.data.id)}>Delete</Button>\r\n                </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>{props.data.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Event RSVP successful. We will send you a reminder mail before the event.\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent\r\n\r\n\r\n","import React from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nfunction Filters(props) {\r\n    return (\r\n        <Form className=\"filter\">\r\n            <h3>Filters</h3>\r\n            <div key='inline-radio' className=\"mb-3\">\r\n                <Form.Check inline label=\"All time\" name=\"filterKey\" value=\"allTime\" type=\"radio\" id={'default-radio-1'} onChange={props.handleChange}/>\r\n                <Form.Check inline label=\"This week\" name=\"filterKey\" value=\"thisWeek\" type=\"radio\" id={'default-radio-2'} onChange={props.handleChange}/>\r\n                <Form.Check inline label=\"This month\" name=\"filterKey\" type=\"radio\" value=\"thisMonth\" id={'default-radio-3'} onChange={props.handleChange}/>\r\n                <Form.Check inline label=\"In next 3 months\" name=\"filterKey\" type=\"radio\" value=\"in3Months\" id={'default-radio-4'} onChange={props.handleChange}/>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\nexport default Filters;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./Header\";\r\nimport MainContent from \"./MainContent\";\r\nimport Filters from \"./Filters\";\r\nimport { removeUserSession, getToken } from \"../Utils/Common\";\r\nimport { Spinner, Modal, Form, Button } from \"react-bootstrap\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n      _id: \"\",\r\n      id: 0,\r\n      name: \"\",\r\n      city: \"\",\r\n      company: \"\",\r\n      eventDate : [new Date()],\r\n      filteredData: [],\r\n      searchValue: \"\",\r\n      filterKey: \"name\",\r\n      isFilterApplied: false,\r\n      isDataLoaded: false,\r\n      show: false,\r\n      bannerEvent : {\r\n        date: new Date(),\r\n        company: {\r\n          name: 'company'\r\n        }\r\n      }\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.handleDateFilter = this.handleDateFilter.bind(this);\r\n    this.handleAddEvent = this.handleAddEvent.bind(this);\r\n    this.createEvent = this.createEvent.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.deleteEvent = this.deleteEvent.bind(this);\r\n    this.handleLogOut = this.handleLogOut.bind(this);\r\n    this.notify = this.notify.bind(this);\r\n  }\r\n  handleChange(name,value){\r\n    if(name===\"date\") {\r\n      console.log(value);\r\n    } else {\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  }\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    if(this.state.filterKey===\"city\") {\r\n      let events = this.state.data.filter((event) =>{\r\n        return event.address.city.toLowerCase().includes(this.state.searchValue.toLowerCase());\r\n      });\r\n      this.setState({\r\n        filteredData: events,\r\n        searchValue: \"\",\r\n        filterKey: \"name\",\r\n        isFilterApplied: true\r\n      });\r\n    } else if(this.state.filterKey===\"company\") {\r\n      let events = this.state.data.filter((event) =>{\r\n        return event.company.name.toLowerCase().includes(this.state.searchValue.toLowerCase());\r\n      });\r\n      this.setState({\r\n        filteredData: events,\r\n        searchValue: \"\",\r\n        filterKey: \"name\",\r\n        isFilterApplied: true\r\n      });\r\n    } else if(this.state.filterKey===\"name\") {\r\n      let events = this.state.data.filter((event) =>{\r\n        return event.name.toLowerCase().includes(this.state.searchValue.toLowerCase());\r\n      });\r\n      this.setState({\r\n        filteredData: events,\r\n        searchValue: \"\",\r\n        filterKey: \"name\",\r\n        isFilterApplied: true\r\n      }); \r\n    }\r\n  }\r\n  handleReset() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        filteredData: prevState.data,\r\n        isFilterApplied: false\r\n      }\r\n    });\r\n  }\r\n  handleDateFilter(e) {    \r\n    if(e.target.value===\"allTime\") {\r\n      this.setState(state => ({\r\n        filteredData: state.data\r\n      }))\r\n    } else if(e.target.value===\"thisWeek\") {\r\n      let events = this.state.data.filter(event => {\r\n        return (event.date-(new Date()))/(1000*60*60*24) <= 7;\r\n      })\r\n      this.setState({\r\n        filteredData: events\r\n      })\r\n    } else if(e.target.value===\"thisMonth\") {\r\n      let events = this.state.data.filter(event => {\r\n        return event.date.getMonth() === (new Date()).getMonth();\r\n      })\r\n      this.setState({\r\n        filteredData: events\r\n      })\r\n    } else if(e.target.value===\"in3Months\") {\r\n      let events = this.state.data.filter(event => {\r\n        return (event.date-(new Date()))/(1000*60*60*24) <= 120;\r\n      })\r\n      this.setState({\r\n        filteredData: events\r\n      })\r\n    }\r\n  }\r\n  handleAddEvent(e) {\r\n    let {name, value} = e.target;\r\n    if(name===\"date\") {\r\n      this.setState({\r\n        eventDate: [value]\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        [name]: value\r\n      })\r\n    }\r\n  }\r\n  createEvent(e) {\r\n    e.preventDefault();\r\n    let postEvent = {\r\n      name: this.state.name,\r\n      city: this.state.city,\r\n      company: this.state.company,\r\n      date: new Date(this.state.eventDate[0])\r\n    };\r\n    const token = getToken();\r\n    axios.post('https://salamander-event-manager.herokuapp.com/v1/events', postEvent, {\r\n      headers: {\r\n        'Authorization': 'Bearer '+ token\r\n      }\r\n    }).then(result => {\r\n      console.log(result);\r\n      let event = {\r\n        _id: result.data._id,\r\n        id: this.state.data.length,\r\n        name: this.state.name,\r\n        address: {\r\n          city: this.state.city\r\n        },\r\n        company: {\r\n          name: this.state.company\r\n        },\r\n        date: new Date(this.state.eventDate[0]),\r\n        img: `https://source.unsplash.com/collection/4482145/700x600/?sig=${this.state.data.length+1}`\r\n      };\r\n      let events = this.state.data.concat([event]);\r\n      this.setState({\r\n        data: events,\r\n        filteredData: events,\r\n        name: \"\",\r\n        city: \"\",\r\n        company: \"\",\r\n        eventDates: [new Date()]\r\n      });\r\n      this.notify('Event Created Successfully');\r\n    });\r\n  }\r\n  handleShow(id, _id, data, date) {\r\n    console.log(id, _id);\r\n    this.setState({\r\n      id: id,\r\n      _id: _id,\r\n      show: true,\r\n      name: data.name,\r\n      city: data.address.city,\r\n      company: data.company.name,\r\n      eventDate: [new Date(date)]\r\n    });\r\n  }\r\n  handleClose() {\r\n    this.setState({\r\n      show: false\r\n    });\r\n  }\r\n  updateEvent(e) {\r\n    e.preventDefault();\r\n    let patchEvent = {\r\n      name: this.state.name,\r\n      city: this.state.city,\r\n      company: this.state.company,\r\n      date: new Date(this.state.eventDate[0])\r\n    };\r\n    console.log(patchEvent, this.state._id, this.state.id);\r\n    const token = getToken();\r\n    axios.patch('https://salamander-event-manager.herokuapp.com/v1/events/'+this.state._id, patchEvent, {\r\n      headers: {\r\n        'Authorization': 'Bearer '+ token\r\n      }\r\n    }).then(response => {\r\n      console.log(response);\r\n      let event = {\r\n        _id: response.data._id,\r\n        id: this.state.id,\r\n        name: this.state.name,\r\n        address: {\r\n          city: this.state.city\r\n        },\r\n        company: {\r\n          name: this.state.company\r\n        },\r\n        date: new Date(this.state.eventDate[0]),\r\n        img: this.state.data[this.state.id].img\r\n      };\r\n      let events = [];\r\n      for(let i=0; i<this.state.data.length; i++) {\r\n        if(i !== this.state.id) {\r\n          events.push(this.state.data[i]);\r\n        } else {\r\n          events.push(event);\r\n        }\r\n      }\r\n      this.setState({\r\n        data: events,\r\n        filteredData: events\r\n      });\r\n      this.notify('Event Updated Successfully');\r\n    });\r\n  }\r\n  deleteEvent(_id, id) {\r\n    console.log(_id);\r\n    let events = this.state.data.filter((event) => event.id !== id);\r\n    this.setState({\r\n      data: events,\r\n      filteredData: events\r\n    });\r\n    this.notify('Event Deleted Successfully');\r\n    const token = getToken();\r\n    axios.delete('https://salamander-event-manager.herokuapp.com/v1/events/'+_id, {\r\n      headers: {\r\n        'Authorization': 'Bearer '+ token \r\n      }\r\n    }).then(result => console.log(result));\r\n  }\r\n  handleLogOut = () => {\r\n    this.setState({\r\n      isDataLoaded: false\r\n    });\r\n    const token = getToken();\r\n    axios.post('https://salamander-event-manager.herokuapp.com/v1/users/logout', {}, {\r\n      headers: {\r\n        'Authorization': 'Bearer '+ token\r\n      }\r\n    }).then(() => {\r\n      this.setState({\r\n        isDataLoaded: true\r\n      });\r\n      removeUserSession();\r\n      this.props.history.push('/')\r\n    }).catch( e => console.log(e));\r\n  }\r\n  notify = (value) => {\r\n    return toast.success(value , {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      });\r\n  }\r\n  componentDidMount() {\r\n      const token = getToken();\r\n      axios.get('https://salamander-event-manager.herokuapp.com/v1/events', {\r\n        headers: {\r\n          'Authorization': 'Bearer '+ token\r\n        }\r\n      })\r\n        .then((result) => {\r\n          result = result.data\r\n          console.log(result);\r\n          let newEvents = [];\r\n          let targetEvent = {};\r\n          let date = new Date(2027, 11, 30);\r\n          let i = 0;\r\n          for(let item of result) {\r\n            let event  = {\r\n              _id: item._id,\r\n              id : i++,\r\n              name: item.name,\r\n              address: {\r\n                city: item.city\r\n              },\r\n              company: {\r\n                name: item.company\r\n              },\r\n              date: new Date(item.date),\r\n              img: `https://source.unsplash.com/collection/4482145/700x600/?sig=${i}`\r\n            };\r\n            if(event.date < date) {\r\n              targetEvent = event;\r\n              date = event.date;\r\n            }\r\n            newEvents.push(event);\r\n          }\r\n          return {newEvents, targetEvent};\r\n        })\r\n        .then( eventObj => {\r\n          this.setState(state => ({\r\n            data: eventObj.newEvents,\r\n            filteredData: eventObj.newEvents,\r\n            isDataLoaded: true,\r\n            bannerEvent: eventObj.targetEvent\r\n          }))\r\n        })      \r\n  }\r\n  render() {\r\n    let events = [];\r\n    if (this.state.isDataLoaded) {\r\n      events = this.state.filteredData.map((event, index) => {\r\n        return <MainContent \r\n        key={index}\r\n        data={event}\r\n        date={event.date.toDateString()}\r\n        handleShow={this.handleShow}\r\n        deleteEvent = {this.deleteEvent}\r\n        />;\r\n      });\r\n    }\r\n    const Loader = (\r\n      <Spinner\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          justifyContent: \"center\",\r\n          width: \"60px\",\r\n          height: \"60px\",\r\n        }}\r\n        animation=\"border\"\r\n        variant=\"primary\"\r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n    return (\r\n      <div>\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n        <Header inputValue={this.state.searchValue}\r\n         handleChange={this.handleChange}\r\n         filterKey={this.state.filterKey}\r\n         handleSubmit={this.handleSubmit}\r\n         isFilterApplied={this.state.isFilterApplied}\r\n         handleReset={this.handleReset}\r\n         handleAddEvent = {this.handleAddEvent}\r\n         name = {this.state.name}\r\n         city = {this.state.city}\r\n         company = {this.state.company}\r\n         date = {this.state.eventDate[0]}\r\n         createEvent = {this.createEvent}\r\n         targetEventName = {this.state.bannerEvent.name}\r\n         targetEventDate = {this.state.bannerEvent.date.toDateString()}\r\n         targetEventCompany = {this.state.bannerEvent.company.name}\r\n         timeout = {this.state.bannerEvent.date.toString()}\r\n         image = {this.state.bannerEvent.img}\r\n         handleLogOut = {this.handleLogOut}\r\n        />\r\n        <div className=\"main-content\">\r\n          <div className=\"filter-div\">\r\n            <Filters handleChange={this.handleDateFilter}/>\r\n          </div>\r\n          <h3>Events</h3> \r\n          <div className=\"card-list\">\r\n            {this.state.isDataLoaded ? events : Loader}\r\n          </div>\r\n        </div>\r\n        <Modal\r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Form onSubmit={(e) => {\r\n                this.handleClose();\r\n                this.updateEvent(e);\r\n            }}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Event Update Form</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label>Event Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name of event\" name=\"name\" value={this.state.name} onChange={this.handleAddEvent}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupPassword\">\r\n                        <Form.Label>Company Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Company\" name=\"company\" value={this.state.company} onChange={this.handleAddEvent}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupPassword\">\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"City\" name=\"city\" value={this.state.city} onChange={this.handleAddEvent}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupPassword\">\r\n                        <Form.Label>Date</Form.Label>\r\n                        <Form.Control type=\"datetime-local\" placeholder=\"Date\" name=\"date\" value={this.state.date} onChange={this.handleAddEvent}></Form.Control>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"success\" type=\"submit\">Submit</Button>\r\n                <Button variant=\"primary\" onClick={this.handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {useState} from 'react';\r\nimport { setUserSession } from '../Utils/Common';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        setError(null);\r\n        setLoading(true);\r\n        axios.post('https://salamander-event-manager.herokuapp.com/v1/users/login', {\r\n            username,\r\n            password\r\n        }).then( (response) => {\r\n            setLoading(false);\r\n            setUserSession(response.data.user, response.data.token);\r\n            props.history.push('/dashboard');\r\n        }).catch(e => {\r\n            setLoading(false);\r\n            setError('Login Failed');\r\n            console.log(e);\r\n        })\r\n    }\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const Loader = (\r\n      <Spinner\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          justifyContent: \"center\",\r\n          width: \"60px\",\r\n          height: \"60px\",\r\n        }}\r\n        animation=\"border\"\r\n        variant=\"primary\"\r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={handleLogin}>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"email\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                autoFocus\r\n                />\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                autoComplete=\"current-password\"\r\n                />\r\n                <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n                />\r\n                <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                >\r\n                  SIGN IN\r\n                </Button>\r\n                {error}\r\n                <Grid container>\r\n                <Grid item xs>\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                    </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link href=\"#\" variant=\"body2\" onClick={() => {props.history.push('/signup')}}>\r\n                    {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                </Grid>\r\n                </Grid>\r\n                {loading ? Loader : null }\r\n            </form>\r\n            </div>\r\n            <Box mt={8}>\r\n            <Copyright />\r\n            </Box>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Login","import React, { useState } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { setUserSession } from '../Utils/Common';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {  \r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const Loader = (\r\n    <Spinner\r\n      style={{\r\n        position: \"fixed\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        justifyContent: \"center\",\r\n        width: \"60px\",\r\n        height: \"60px\",\r\n      }}\r\n      animation=\"border\"\r\n      variant=\"primary\"\r\n      role=\"status\"\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n  const handleSignUp = (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    setLoading(true);\r\n    axios.post('https://salamander-event-manager.herokuapp.com/v1/users/', {\r\n        username,\r\n        password,\r\n        email\r\n    }).then(response => {\r\n        setLoading(false);\r\n        console.log(response);\r\n        setUserSession(response.data.user, response.data.token);\r\n        props.history.push('/dashboard');\r\n    }).catch(e => {\r\n        setLoading(false);\r\n        setError(e.response.data.message);\r\n    })\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSignUp}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n             SIGN UP\r\n          </Button>\r\n          {error}\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        {loading ? Loader : null}\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport Login from \"./Components/Login\";\r\nimport SignUp from \"./Components/SignUp\";\r\n\r\nclass App extends React.Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Login}></Route>\r\n          <Route path=\"/dashboard\" exact component={Dashboard}></Route>\r\n          <Route path=\"/signup\" exact component={SignUp}></Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}